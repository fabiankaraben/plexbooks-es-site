{"pageProps":{"post":{"title":"Una gran introducción a Git","date":"2022-07-19T00:00:00.000Z","lastmod":"2022-07-19T00:00:00.000Z","draft":false,"summary":"En esta lección te introducirás en los conceptos básicos que son centrales para Git, y en cómo Git se diferencia de otros sistemas de control  de versión.","authors":["fabiankaraben"],"body":{"raw":"\nEsta sección da a los recién llegados una introducción a Git intentando que lo sientan familiar en el resto del libro.\n\nTe introducirás en los conceptos básicos que son centrales para Git, cómo Git se diferencia de otros sistemas de control \nde versión, y las operaciones básicas de Git tales como `commit`, `merge` y `pull`.\n\nPuede ser que encuentres en esta sección cosas que no entiendas sobre Git, incluso si llevas un largo tiempo utilizándolo.\n\n## Comenzando\n\nPuede ser desafiante comenzar a trabajar con Git en la línea de comandos si nunca antes has trabajado con comandos.\n\nYa que vas a estar trabajando con comandos de Git durante la mayor parte de este libro, en esta sección te daré una \nintroducción sobre cómo hacer esto.\n\nExiste un flujo de trabajo bastante común que sirve para explicar la mayoría de las interacciones que tendrás con Git:\n\n- Crear un *fork* de un repositorio remoto existente.\n- Copiar (o clonar) un repositorio remoto en tu computadora.\n- Crear un área de trabajo separada en el repositorio, donde puedas trabajar sin afectar a nadie.\n- Marcar los cambios para ser guardados en la copia local del repositorio.\n- Guardar los cambios en tu copia local del repositorio.\n- Sincronizar esos cambios locales con el repositorio remoto.\n- Opcionalmente, notificar al dueño del repositorio que tus cambios están listos para ser revisados.\n\nEste capítulo te llevará a través de todos los pasos mencionados en la lista anterior para ayudarte a familiarizarte con\nlo básico del trabajo con Git en la línea de comandos.\n\nA pesar de que este capítulo no explicará cada paso en detalle, te dará suficiente información para sentirte familiarizado\ncon los repositorios de Git y flujo de trabajo básico de Git para entender mejor los capítulos siguientes.\n\n## ¿Qué son los repositorios remotos?\n\nUn repositorio remoto es simplemente una colección de todos los archivos de un proyecto, alojadas en algún otro lugar que no\nes tu máquina local. Estos podrían ser alojados internamente en tu red, pero lo más usual es alojarlos en servicios cloud \ncomo GitHub o GitLab.\n\nTener centralizado un repositorio remoto hace que sea fácil compartir y contribuir en un proyecto. En lugar de enviar los \narchivos a las personas interesadas, simplemente colocas esos archivos en el repositorio remoto para luego obtenerlos y \nejecutarlos lo más rápido posible.\n\nEl primer paso es crear tu propia copia personal online, o **fork**, del repositorio remoto. Esto te da un espacio online donde\ntrabajar y seguir las instrucciones de este libro sin afectar a ninguna de las demás personas leyendo este libro y siguiendo \nlas mismas instrucciones.\n\n## Hacer fork a un repositorio remoto\n\nNavega a esta URL en el navegador:\n\nhttps://github.com/fabiankaraben/repo-de-practica\n\nVerás una pantalla como la siguiente:\n\n![Primera vista de un repositorio remoto en GitHub](/../static/images/git-book/plexbooks-git-image-01.jpg)\n\nEsta es la página principal en GitHub para el proyecto que estarás utilizando a lo largo de este libro.\nCubriremos todos los detalles de GitHub más adelante.\n\nAsegúrate de estar conectado con tu propia cuenta de usuario en GitHub, entonces haz clic en el botón **Fork**\nen la sección superior derecha de la página.\n\nCuando GitHub finalice de crear el fork del repositorio, verás una pantalla que se parece mucho al repositorio original,\ncon la excepción de que ahora estás trabajando en una ubicación diferente, y eso es justo lo que necesitas.\n\nEsta es una réplica exacta del repositorio original, con la excepción de esta copia existe en tu propia cuenta de usuario\nde GitHub. Esto quiere decir que puedes hacer lo que quieras con este repositorio, incluso eliminarlo, sin afectar al\nrepositorio original.\n\nPara comenzar a trabajar ahora necesitas *clonar* este repositorio a tu máquina local. Para hacer esto, necesitas la URL de\neste repositorio. Esto es muy fácil de conseguir, simplemente haz clic en el botón **Code** en la página y luego haz clic en\nel pequeño icono de *copiar a la papelera*, como se muestra en la imagen:\n\n![Copiar la URL de un repositorio remoto en GitHub](/../static/images/git-book/plexbooks-git-image-02.jpg)\n\nAhora tienes la URL del repositorio copiada en tu portapapeles.\n\nTerminamos de trabajar con esta página por ahora, estamos listos para comenzar a trabajar con Git en la línea de comandos.\n\nAbre la Terminal, PowerShell o la consola de tu sistema y estarás listo para continuar.\n\n## Clonar un repositorio desde GitHub\n\nEn la consola de comandos, tipea el siguiente comando sin presionar **ENTER**:\n\n```\ngit clone\n```\n\nLuego de esto solo ingresa un espacio en blanco y luego pega la URL que tienes en el portapapeles.\n\nDeberías ver algo muy similar a esto:\n\n```\ngit clone git@github.com:tu-usuario-github/repo-de-practica.git\n```\n\nAnalicemos cada parte de este comando:\n\n- `git` es el nombre de la herramienta de línea de comandos de Git. Cada interacción que tengas con Git en la línea de comandos\ncomenzará con el comando `git` seguido del subcomando que necesites ejecutar.\n- `clone` es el nombre del subcomando que necesitas ejecutar en este paso. `clone` que dice a git que copie el repositorio\nremoto especificado a tu máquina local.\n- `git@github.com:<tu-usuario-en-github>/repo-de-practica.git` es la URL completa del repositorio remoto que se va a clonar. \nEsta incluye una referencia de acceso a GitHub, tu nombre de usuario en GitHub y el nombre del repositorio.\n\nAhora presiona **Enter** y ejecuta el comando. Git te mostrará algo de información sobre el estado y finalización del proceso:\n\n```\nClonando en 'repo-de-practica'...\nremote: Enumerating objects: 4, done.\nremote: Counting objects: 100% (4/4), done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0\nRecibiendo objetos: 100% (4/4), listo.\n```\n\nLos detalles de esta salida no son importantes en este momento pero básicamente significa que la clonación se realizó con éxito y\nahora tienes el repositorio en tu espacio de trabajo local.\n\nEl siguiente paso es navegar dentro del directorio del repositorio ejecutando el siguiente comando:\n\n```\ncd repo-de-practica\n```\n\n> En este punto puedes abrir este directorio en tu editor de código favorito, por ejemplo Visual Studio Code. Aunque Git sirve para\ngestionar las versiones de cualquier tipo de contenido, no solamente código de programación.\n\nAhora que tienes el repositorio clonado en tu máquina local, el siguiente paso es crear un espacio de trabajo separado, o rama,\no **branch**, donde puedas cambiar el contenido de cualquier archivo sin miedo a estropear el contenido original del repositorio.\n\n## Crear una nueva rama en Git\n\nUna rama (*branch*) es conceptualmente una copia del contenido original del repositorio. De esta forma puedes trabajar en una rama\nsin afectar el contenido orginal del repositorio hasta que estés listo para unir los cambios con ese contenido original.\n\nSi alguna vez copiaste un archivo antes de comenzar a editarlo para preservar el original intacto, entiendes el concepto.\n\nEn la línea de comandos ejecuta lo siguiente para crear una nueva rama:\n\n```\ngit branch mi-nueva-rama\n```\n\nAnalicemos las partes de este comando:\n\n- `git` es el nombre de la herramienta de línea de comandos de Git.\n- `branch` es el nombre del subcomando de Git para trabajar con ramas, si no se especifica más información adicional que el nombre \nde la rama, su comportamiento es crear una nueva rama.\n- `mi-nueva-rama` es el nombre de la rama que se va a crear.\n\nEl nombre de la rama suele ser descriptivo en relación a las ediciones que se van a realizar en el contenido dentro de esa rama.\n\nPuedes ver las ramas creadas con el siguiente comando:\n\n```\ngit branch\n```\n\nEsto se ve muy similar al comando anterior, pero en este caso no se especifica un nombre de rama.\n\nGit te mostrará lo siguiente:\n\n```\n* main\n  mi-nueva-rama\n```\n\n`main` es la copia original del repositorio, mientras que `mi-nueva-rama` es la rama que acabas de crear. El asterisco `*` en qué\nrama estás trabajando actualmente. Ahora mismo estás en la rama `main` pero esto no es lo que queremos, necesitamos cambiar a la\nnueva rama.\n\nPara cambiar a la rama `mi-nueva-rama` ejecuta el siguiente comando:\n\n```\ngit checkout mi-nueva-rama\n```\n\n> Este comando se ve algo raro, tal vez esperabas ver algo como *git change-branch* pero sucede que Git ve esto en términos de *checkout*,\nes decir, como marcar la salida, proceso terminado y entrar a una nueva etapa.\n\nGit te responderá con algo similar a:\n\n```\nCambiado a rama 'mi-nueva-rama'\n```\n\nAhora incluso puedes confirmar que sí se realizó el cambio de rema volviendo a ejecutar:\n\n```\ngit branch\n```\n\ny verás esta salida:\n\n```\n  main\n* mi-nueva-rama\n```\n\nAhora el asterisco indica que la rama actual de trabajo es `mi-nueva-rama`.\n\n","code":"var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var g=(o,i)=>()=>(i||o((i={exports:{}}).exports,i),i.exports),b=(o,i)=>{for(var n in i)c(o,n,{get:i[n],enumerable:!0})},s=(o,i,n,a)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let r of u(i))!h.call(o,r)&&r!==n&&c(o,r,{get:()=>i[r],enumerable:!(a=p(i,r))||a.enumerable});return o};var q=(o,i,n)=>(n=o!=null?d(m(o)):{},s(i||!o||!o.__esModule?c(n,\"default\",{value:o,enumerable:!0}):n,o)),v=o=>s(c({},\"__esModule\",{value:!0}),o);var t=g((k,l)=>{l.exports=_jsx_runtime});var N={};b(N,{default:()=>G,frontmatter:()=>f});var e=q(t()),f={title:\"Una gran introducci\\xF3n a Git\",date:\"2022-07-19\",lastmod:\"2022-07-19\",draft:!1,summary:\"En esta lecci\\xF3n te introducir\\xE1s en los conceptos b\\xE1sicos que son centrales para Git, y en c\\xF3mo Git se diferencia de otros sistemas de control  de versi\\xF3n.\",authors:[\"fabiankaraben\"]};function j(o={}){let{wrapper:i}=o.components||{};return i?(0,e.jsx)(i,Object.assign({},o,{children:(0,e.jsx)(n,{})})):n();function n(){let a=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",a:\"a\",span:\"span\",ul:\"ul\",li:\"li\",em:\"em\",strong:\"strong\",img:\"img\",pre:\"pre\",blockquote:\"blockquote\"},o.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:\"Esta secci\\xF3n da a los reci\\xE9n llegados una introducci\\xF3n a Git intentando que lo sientan familiar en el resto del libro.\"}),(0,e.jsxs)(a.p,{children:[\"Te introducir\\xE1s en los conceptos b\\xE1sicos que son centrales para Git, c\\xF3mo Git se diferencia de otros sistemas de control de versi\\xF3n, y las operaciones b\\xE1sicas de Git tales como \",(0,e.jsx)(a.code,{children:\"commit\"}),\", \",(0,e.jsx)(a.code,{children:\"merge\"}),\" y \",(0,e.jsx)(a.code,{children:\"pull\"}),\".\"]}),(0,e.jsx)(a.p,{children:\"Puede ser que encuentres en esta secci\\xF3n cosas que no entiendas sobre Git, incluso si llevas un largo tiempo utiliz\\xE1ndolo.\"}),(0,e.jsxs)(a.h2,{id:\"comenzando\",children:[(0,e.jsx)(a.a,{href:\"#comenzando\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Comenzando\"]}),(0,e.jsx)(a.p,{children:\"Puede ser desafiante comenzar a trabajar con Git en la l\\xEDnea de comandos si nunca antes has trabajado con comandos.\"}),(0,e.jsx)(a.p,{children:\"Ya que vas a estar trabajando con comandos de Git durante la mayor parte de este libro, en esta secci\\xF3n te dar\\xE9 una introducci\\xF3n sobre c\\xF3mo hacer esto.\"}),(0,e.jsx)(a.p,{children:\"Existe un flujo de trabajo bastante com\\xFAn que sirve para explicar la mayor\\xEDa de las interacciones que tendr\\xE1s con Git:\"}),(0,e.jsxs)(a.ul,{children:[(0,e.jsxs)(a.li,{children:[\"Crear un \",(0,e.jsx)(a.em,{children:\"fork\"}),\" de un repositorio remoto existente.\"]}),(0,e.jsx)(a.li,{children:\"Copiar (o clonar) un repositorio remoto en tu computadora.\"}),(0,e.jsx)(a.li,{children:\"Crear un \\xE1rea de trabajo separada en el repositorio, donde puedas trabajar sin afectar a nadie.\"}),(0,e.jsx)(a.li,{children:\"Marcar los cambios para ser guardados en la copia local del repositorio.\"}),(0,e.jsx)(a.li,{children:\"Guardar los cambios en tu copia local del repositorio.\"}),(0,e.jsx)(a.li,{children:\"Sincronizar esos cambios locales con el repositorio remoto.\"}),(0,e.jsx)(a.li,{children:\"Opcionalmente, notificar al due\\xF1o del repositorio que tus cambios est\\xE1n listos para ser revisados.\"})]}),(0,e.jsx)(a.p,{children:\"Este cap\\xEDtulo te llevar\\xE1 a trav\\xE9s de todos los pasos mencionados en la lista anterior para ayudarte a familiarizarte con lo b\\xE1sico del trabajo con Git en la l\\xEDnea de comandos.\"}),(0,e.jsx)(a.p,{children:\"A pesar de que este cap\\xEDtulo no explicar\\xE1 cada paso en detalle, te dar\\xE1 suficiente informaci\\xF3n para sentirte familiarizado con los repositorios de Git y flujo de trabajo b\\xE1sico de Git para entender mejor los cap\\xEDtulos siguientes.\"}),(0,e.jsxs)(a.h2,{id:\"qu\\xE9-son-los-repositorios-remotos\",children:[(0,e.jsx)(a.a,{href:\"#qu\\xE9-son-los-repositorios-remotos\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"\\xBFQu\\xE9 son los repositorios remotos?\"]}),(0,e.jsx)(a.p,{children:\"Un repositorio remoto es simplemente una colecci\\xF3n de todos los archivos de un proyecto, alojadas en alg\\xFAn otro lugar que no es tu m\\xE1quina local. Estos podr\\xEDan ser alojados internamente en tu red, pero lo m\\xE1s usual es alojarlos en servicios cloud como GitHub o GitLab.\"}),(0,e.jsx)(a.p,{children:\"Tener centralizado un repositorio remoto hace que sea f\\xE1cil compartir y contribuir en un proyecto. En lugar de enviar los archivos a las personas interesadas, simplemente colocas esos archivos en el repositorio remoto para luego obtenerlos y ejecutarlos lo m\\xE1s r\\xE1pido posible.\"}),(0,e.jsxs)(a.p,{children:[\"El primer paso es crear tu propia copia personal online, o \",(0,e.jsx)(a.strong,{children:\"fork\"}),\", del repositorio remoto. Esto te da un espacio online donde trabajar y seguir las instrucciones de este libro sin afectar a ninguna de las dem\\xE1s personas leyendo este libro y siguiendo las mismas instrucciones.\"]}),(0,e.jsxs)(a.h2,{id:\"hacer-fork-a-un-repositorio-remoto\",children:[(0,e.jsx)(a.a,{href:\"#hacer-fork-a-un-repositorio-remoto\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Hacer fork a un repositorio remoto\"]}),(0,e.jsx)(a.p,{children:\"Navega a esta URL en el navegador:\"}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.a,{href:\"https://github.com/fabiankaraben/repo-de-practica\",children:\"https://github.com/fabiankaraben/repo-de-practica\"})}),(0,e.jsx)(a.p,{children:\"Ver\\xE1s una pantalla como la siguiente:\"}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"Primera vista de un repositorio remoto en GitHub\",src:\"/../static/images/git-book/plexbooks-git-image-01.jpg\"})}),(0,e.jsx)(a.p,{children:\"Esta es la p\\xE1gina principal en GitHub para el proyecto que estar\\xE1s utilizando a lo largo de este libro. Cubriremos todos los detalles de GitHub m\\xE1s adelante.\"}),(0,e.jsxs)(a.p,{children:[\"Aseg\\xFArate de estar conectado con tu propia cuenta de usuario en GitHub, entonces haz clic en el bot\\xF3n \",(0,e.jsx)(a.strong,{children:\"Fork\"}),\" en la secci\\xF3n superior derecha de la p\\xE1gina.\"]}),(0,e.jsx)(a.p,{children:\"Cuando GitHub finalice de crear el fork del repositorio, ver\\xE1s una pantalla que se parece mucho al repositorio original, con la excepci\\xF3n de que ahora est\\xE1s trabajando en una ubicaci\\xF3n diferente, y eso es justo lo que necesitas.\"}),(0,e.jsx)(a.p,{children:\"Esta es una r\\xE9plica exacta del repositorio original, con la excepci\\xF3n de esta copia existe en tu propia cuenta de usuario de GitHub. Esto quiere decir que puedes hacer lo que quieras con este repositorio, incluso eliminarlo, sin afectar al repositorio original.\"}),(0,e.jsxs)(a.p,{children:[\"Para comenzar a trabajar ahora necesitas \",(0,e.jsx)(a.em,{children:\"clonar\"}),\" este repositorio a tu m\\xE1quina local. Para hacer esto, necesitas la URL de este repositorio. Esto es muy f\\xE1cil de conseguir, simplemente haz clic en el bot\\xF3n \",(0,e.jsx)(a.strong,{children:\"Code\"}),\" en la p\\xE1gina y luego haz clic en el peque\\xF1o icono de \",(0,e.jsx)(a.em,{children:\"copiar a la papelera\"}),\", como se muestra en la imagen:\"]}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"Copiar la URL de un repositorio remoto en GitHub\",src:\"/../static/images/git-book/plexbooks-git-image-02.jpg\"})}),(0,e.jsx)(a.p,{children:\"Ahora tienes la URL del repositorio copiada en tu portapapeles.\"}),(0,e.jsx)(a.p,{children:\"Terminamos de trabajar con esta p\\xE1gina por ahora, estamos listos para comenzar a trabajar con Git en la l\\xEDnea de comandos.\"}),(0,e.jsx)(a.p,{children:\"Abre la Terminal, PowerShell o la consola de tu sistema y estar\\xE1s listo para continuar.\"}),(0,e.jsxs)(a.h2,{id:\"clonar-un-repositorio-desde-github\",children:[(0,e.jsx)(a.a,{href:\"#clonar-un-repositorio-desde-github\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Clonar un repositorio desde GitHub\"]}),(0,e.jsxs)(a.p,{children:[\"En la consola de comandos, tipea el siguiente comando sin presionar \",(0,e.jsx)(a.strong,{children:\"ENTER\"}),\":\"]}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`git clone\n`})})}),(0,e.jsx)(a.p,{children:\"Luego de esto solo ingresa un espacio en blanco y luego pega la URL que tienes en el portapapeles.\"}),(0,e.jsx)(a.p,{children:\"Deber\\xEDas ver algo muy similar a esto:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`git clone git@github.com:tu-usuario-github/repo-de-practica.git\n`})})}),(0,e.jsx)(a.p,{children:\"Analicemos cada parte de este comando:\"}),(0,e.jsxs)(a.ul,{children:[(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.code,{children:\"git\"}),\" es el nombre de la herramienta de l\\xEDnea de comandos de Git. Cada interacci\\xF3n que tengas con Git en la l\\xEDnea de comandos comenzar\\xE1 con el comando \",(0,e.jsx)(a.code,{children:\"git\"}),\" seguido del subcomando que necesites ejecutar.\"]}),(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.code,{children:\"clone\"}),\" es el nombre del subcomando que necesitas ejecutar en este paso. \",(0,e.jsx)(a.code,{children:\"clone\"}),\" que dice a git que copie el repositorio remoto especificado a tu m\\xE1quina local.\"]}),(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.code,{children:\"git@github.com:<tu-usuario-en-github>/repo-de-practica.git\"}),\" es la URL completa del repositorio remoto que se va a clonar. Esta incluye una referencia de acceso a GitHub, tu nombre de usuario en GitHub y el nombre del repositorio.\"]})]}),(0,e.jsxs)(a.p,{children:[\"Ahora presiona \",(0,e.jsx)(a.strong,{children:\"Enter\"}),\" y ejecuta el comando. Git te mostrar\\xE1 algo de informaci\\xF3n sobre el estado y finalizaci\\xF3n del proceso:\"]}),(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\"code-highlight\",children:[(0,e.jsx)(a.span,{className:\"code-line\",children:`Clonando en 'repo-de-practica'...\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`remote: Enumerating objects: 4, done.\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`remote: Counting objects: 100% (4/4), done.\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`remote: Compressing objects: 100% (4/4), done.\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`Recibiendo objetos: 100% (4/4), listo.\n`})]})}),(0,e.jsx)(a.p,{children:\"Los detalles de esta salida no son importantes en este momento pero b\\xE1sicamente significa que la clonaci\\xF3n se realiz\\xF3 con \\xE9xito y ahora tienes el repositorio en tu espacio de trabajo local.\"}),(0,e.jsx)(a.p,{children:\"El siguiente paso es navegar dentro del directorio del repositorio ejecutando el siguiente comando:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`cd repo-de-practica\n`})})}),(0,e.jsx)(a.blockquote,{children:(0,e.jsx)(a.p,{children:\"En este punto puedes abrir este directorio en tu editor de c\\xF3digo favorito, por ejemplo Visual Studio Code. Aunque Git sirve para gestionar las versiones de cualquier tipo de contenido, no solamente c\\xF3digo de programaci\\xF3n.\"})}),(0,e.jsxs)(a.p,{children:[\"Ahora que tienes el repositorio clonado en tu m\\xE1quina local, el siguiente paso es crear un espacio de trabajo separado, o rama, o \",(0,e.jsx)(a.strong,{children:\"branch\"}),\", donde puedas cambiar el contenido de cualquier archivo sin miedo a estropear el contenido original del repositorio.\"]}),(0,e.jsxs)(a.h2,{id:\"crear-una-nueva-rama-en-git\",children:[(0,e.jsx)(a.a,{href:\"#crear-una-nueva-rama-en-git\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Crear una nueva rama en Git\"]}),(0,e.jsxs)(a.p,{children:[\"Una rama (\",(0,e.jsx)(a.em,{children:\"branch\"}),\") es conceptualmente una copia del contenido original del repositorio. De esta forma puedes trabajar en una rama sin afectar el contenido orginal del repositorio hasta que est\\xE9s listo para unir los cambios con ese contenido original.\"]}),(0,e.jsx)(a.p,{children:\"Si alguna vez copiaste un archivo antes de comenzar a editarlo para preservar el original intacto, entiendes el concepto.\"}),(0,e.jsx)(a.p,{children:\"En la l\\xEDnea de comandos ejecuta lo siguiente para crear una nueva rama:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`git branch mi-nueva-rama\n`})})}),(0,e.jsx)(a.p,{children:\"Analicemos las partes de este comando:\"}),(0,e.jsxs)(a.ul,{children:[(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.code,{children:\"git\"}),\" es el nombre de la herramienta de l\\xEDnea de comandos de Git.\"]}),(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.code,{children:\"branch\"}),\" es el nombre del subcomando de Git para trabajar con ramas, si no se especifica m\\xE1s informaci\\xF3n adicional que el nombre de la rama, su comportamiento es crear una nueva rama.\"]}),(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.code,{children:\"mi-nueva-rama\"}),\" es el nombre de la rama que se va a crear.\"]})]}),(0,e.jsx)(a.p,{children:\"El nombre de la rama suele ser descriptivo en relaci\\xF3n a las ediciones que se van a realizar en el contenido dentro de esa rama.\"}),(0,e.jsx)(a.p,{children:\"Puedes ver las ramas creadas con el siguiente comando:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`git branch\n`})})}),(0,e.jsx)(a.p,{children:\"Esto se ve muy similar al comando anterior, pero en este caso no se especifica un nombre de rama.\"}),(0,e.jsx)(a.p,{children:\"Git te mostrar\\xE1 lo siguiente:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\"code-highlight\",children:[(0,e.jsx)(a.span,{className:\"code-line\",children:`* main\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`  mi-nueva-rama\n`})]})}),(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.code,{children:\"main\"}),\" es la copia original del repositorio, mientras que \",(0,e.jsx)(a.code,{children:\"mi-nueva-rama\"}),\" es la rama que acabas de crear. El asterisco \",(0,e.jsx)(a.code,{children:\"*\"}),\" en qu\\xE9 rama est\\xE1s trabajando actualmente. Ahora mismo est\\xE1s en la rama \",(0,e.jsx)(a.code,{children:\"main\"}),\" pero esto no es lo que queremos, necesitamos cambiar a la nueva rama.\"]}),(0,e.jsxs)(a.p,{children:[\"Para cambiar a la rama \",(0,e.jsx)(a.code,{children:\"mi-nueva-rama\"}),\" ejecuta el siguiente comando:\"]}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`git checkout mi-nueva-rama\n`})})}),(0,e.jsx)(a.blockquote,{children:(0,e.jsxs)(a.p,{children:[\"Este comando se ve algo raro, tal vez esperabas ver algo como \",(0,e.jsx)(a.em,{children:\"git change-branch\"}),\" pero sucede que Git ve esto en t\\xE9rminos de \",(0,e.jsx)(a.em,{children:\"checkout\"}),\", es decir, como marcar la salida, proceso terminado y entrar a una nueva etapa.\"]})}),(0,e.jsx)(a.p,{children:\"Git te responder\\xE1 con algo similar a:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`Cambiado a rama 'mi-nueva-rama'\n`})})}),(0,e.jsx)(a.p,{children:\"Ahora incluso puedes confirmar que s\\xED se realiz\\xF3 el cambio de rema volviendo a ejecutar:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsx)(a.code,{className:\"code-highlight\",children:(0,e.jsx)(a.span,{className:\"code-line\",children:`git branch\n`})})}),(0,e.jsx)(a.p,{children:\"y ver\\xE1s esta salida:\"}),(0,e.jsx)(a.pre,{children:(0,e.jsxs)(a.code,{className:\"code-highlight\",children:[(0,e.jsx)(a.span,{className:\"code-line\",children:`  main\n`}),(0,e.jsx)(a.span,{className:\"code-line\",children:`* mi-nueva-rama\n`})]})}),(0,e.jsxs)(a.p,{children:[\"Ahora el asterisco indica que la rama actual de trabajo es \",(0,e.jsx)(a.code,{children:\"mi-nueva-rama\"}),\".\"]})]})}}var G=j;return v(N);})();\n;return Component;"},"_id":"git-book/1-introduccion.mdx","_raw":{"sourceFilePath":"git-book/1-introduccion.mdx","sourceFileName":"1-introduccion.mdx","sourceFileDir":"git-book","contentType":"mdx","flattenedPath":"git-book/1-introduccion"},"type":"GitBook","readingTime":{"text":"8 min read","minutes":7.105,"time":426300,"words":1421},"slug":"introduccion","toc":[{"value":"Comenzando","url":"#comenzando","depth":2},{"value":"¿Qué son los repositorios remotos?","url":"#qué-son-los-repositorios-remotos","depth":2},{"value":"Hacer fork a un repositorio remoto","url":"#hacer-fork-a-un-repositorio-remoto","depth":2},{"value":"Clonar un repositorio desde GitHub","url":"#clonar-un-repositorio-desde-github","depth":2},{"value":"Crear una nueva rama en Git","url":"#crear-una-nueva-rama-en-git","depth":2}]},"authorDetails":[{"name":"Fabián Karaben","avatar":"/static/images/fab-avatar.png","occupation":"Developer and content creator","company":"Plexbooks","email":"hi.plexbooks@gmail.com","twitter":"https://twitter.com/fab_k_dev","linkedin":"https://www.linkedin.com/in/fabiankaraben/","github":"https://github.com/fabiankaraben","type":"Authors","readingTime":{"text":"1 min read","minutes":0.15,"time":9000,"words":30},"slug":"fabiankaraben","toc":[]}],"prev":null,"next":null},"__N_SSG":true}